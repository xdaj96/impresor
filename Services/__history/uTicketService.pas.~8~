unit uTicketService;

interface
  uses SysUtils,udticket,Xml.xmldom, Xml.XMLIntf,msxmldom, xml.xmldoc,Data.DB, Datasnap.DBClient;
  Type
    TTicketService = class
      private
        archivoxmlval:TXMLDocument;
      public
        constructor Create(unXML:TXMLDocument);
        function obtenerTicket(rutaXML:string;cdsdetalle:TClientDataSet):TTicket;
    end;


implementation


constructor TTicketService.Create(unXML:TXMLDocument);
begin
   archivoxmlval:= unXML;
end;

function TTicketService.obtenerTicket(rutaXML:string;cdsdetalle:TClientDataSet):TTicket;
var
  ticket:TTicket;
  encabezadoval,rtaval,nrorefval,detalleval,
ITEMVAL,BARRASVAL,TROQUELVAL,DESCRIPCIONVAL,RTAPRODUCTO,CANTIDADVAL,PORCENTAJEVAL,IMPORTEUNITARIOVAL,IMPORTEAFIVAL,IMPORTECOBERVAL:ixmlnode;
  itemTicket:TTicketItem;
  v:integer;
begin
   ticket:= TTicket.Create;
   itemTicket:= TTicketItem.Create;
   archivoxmlval.LoadFromFile (rutaXML);
                archivoxmlval.Active:=true;
                archivoxmlval.DocumentElement.ChildNodes.Count;
                encabezadoval:=archivoxmlval.DocumentElement.ChildNodes[0];
                encabezadoval.ChildNodes.Count;


                TICKET.nrocomprobantenf:=encabezadoval.ChildNodes['NROTK'].text;
                ticket.comprobante:=encabezadoval.ChildNodes['tipo_comprobante'].text;
                ticket.tip_comprobante:=encabezadoval.ChildNodes['tipo_comprobantefiscal'].text;
                ticket.cod_vendedor:=encabezadoval.ChildNodes['NRO_VENDEDOR'].Text;
                ticket.nom_vendedor:=encabezadoval.ChildNodes['nombre_vendedor'].Text;
                ticket.direccionsucursal:=encabezadoval.ChildNodes['direccion_sucursal'].Text;
                ticket.fechafiscal:=strtodate(encabezadoval.ChildNodes['fecha_comprobante'].Text);
                ticket.cod_cliente:=encabezadoval.ChildNodes['codigo_cliente'].Text;
                ticket.direccion:=encabezadoval.ChildNodes['direccion_cliente'].Text;
                ticket.CONDICIONIVA:=encabezadoval.ChildNodes['responsableiva'].Text;
                ticket.Cuit:=encabezadoval.ChildNodes['cuit'].Text;
                ticket.DESCRIPCIONCLIENTE:=encabezadoval.ChildNodes['DESCRIPCIONCLIENTE'].Text;
                ticket.codigocc:=encabezadoval.ChildNodes['codigo_cc'].Text;
                ticket.nombrecc:=encabezadoval.ChildNodes['nombre_cc'].Text;
                ticket.codigotarjeta:=encabezadoval.ChildNodes['codigo_tj'].Text;
                ticket.codigocheque:=encabezadoval.ChildNodes['codigo_ch'].Text;
                ticket.numerocheque:=encabezadoval.ChildNodes['numero_ch'].Text;
                ticket.codigo_OS:=encabezadoval.ChildNodes['codigo_os'].Text;
                ticket.nombre_os:=encabezadoval.ChildNodes['nombre_plan'].Text;
                ticket.codigo_co1:=encabezadoval.ChildNodes['codigo_co1'].Text;
                ticket.nombre_co1:=encabezadoval.ChildNodes['nombre_planco1'].Text;
                ticket.codigo_Cos2:=encabezadoval.ChildNodes['codigo_co2'].Text;
                ticket.nombre_cos2:=encabezadoval.ChildNodes['nombre_planco2'].Text;
                ticket.importebruto:=strtofloat(encabezadoval.ChildNodes['importe_total'].Text);
                ticket.importeneto:=strtofloat(encabezadoval.ChildNodes['importe_neto'].Text);
                ticket.importecargoos:=strtofloat(encabezadoval.ChildNodes['importe_os'].Text);
                ticket.importecargoco1:=strtofloat(encabezadoval.ChildNodes['importe_co1'].Text);
    //            ticket.importecargoco2:=strtofloat(encabezadoval.ChildNodes['importe_co2'].Text);
                if (encabezadoval.ChildNodes['importe_co2'].Text)<>'' then
                begin
                ticket.importecargoco2:=strtofloat(encabezadoval.ChildNodes['importe_co2'].Text);
                end;
                if (encabezadoval.ChildNodes['importe_co2'].Text)='' then
                begin
                 ticket.importecargoco2:=0;
                end;

                ticket.importetotaldescuento:=strtofloat(encabezadoval.ChildNodes['imp_afectado'].Text);
                ticket.importegentileza:=strtofloat(encabezadoval.ChildNodes['imp_gentilezas'].Text);
                ticket.coeficientetarjeta:=strtofloat(encabezadoval.ChildNodes['coeficiente_tarjeta'].Text);
                if encabezadoval.ChildNodes['pago_efectivo'].Text='' then
                begin
                 ticket.efectivo:=0;
                end;
                if encabezadoval.ChildNodes['pago_efectivo'].Text<>'' then
                begin
                ticket.efectivo:=strtofloat(encabezadoval.ChildNodes['pago_efectivo'].Text);
                end;
                if encabezadoval.ChildNodes['pago_tarjeta'].Text='' then
                begin
                ticket.tarjeta:=0;
                end;
                if encabezadoval.ChildNodes['pago_tarjeta'].Text<>''  then
                begin
                ticket.tarjeta:=strtofloat(encabezadoval.ChildNodes['pago_tarjeta'].Text);
                end;
                if encabezadoval.ChildNodes['pago_cc'].Text='' then
                begin
                ticket.ctacte:=0;
                end;
                if encabezadoval.ChildNodes['pago_cc'].Text<>'' then
                begin
                ticket.ctacte:=strtofloat(encabezadoval.ChildNodes['pago_cc'].Text);
                end;
                if encabezadoval.ChildNodes['pago_ch'].Text='' then
                begin
                ticket.cheque:=0;
                end;
                if encabezadoval.ChildNodes['pago_ch'].Text<>'' then
                begin
                ticket.cheque:=strtofloat(encabezadoval.ChildNodes['pago_ch'].Text);
                end;


                ticket.afiliado_numero:=encabezadoval.ChildNodes['afiliado_os'].Text;
                ticket.afiliado_apellido:=encabezadoval.ChildNodes['afiliado_apellido'].Text;
                ticket.afiliado_nombre:=encabezadoval.ChildNodes['afiliado_nombre'].Text;
                ticket.numero_receta:=encabezadoval.ChildNodes['receta'].Text;
                ticket.medico_nro_matricula:=encabezadoval.ChildNodes['matricula_medico'].Text;
                ticket.medico_codigo_provincia:=encabezadoval.ChildNodes['codigo_provincia'].Text;
                ticket.medico_tipo_matricula:=encabezadoval.ChildNodes['tipo_matricula'].Text;
                ticket.afiliado_numeroco1:=encabezadoval.ChildNodes['afiliado_co1'].Text;
                ticket.medico_nro_matriculaco1:=encabezadoval.ChildNodes['matricula_medicoco1'].Text;
                ticket.valnroreferencia:=encabezadoval.ChildNodes['codigo_Validacion'].Text;
                ticket.nro_caja:=encabezadoval.ChildNodes['Nro_caja'].Text;
                ticket.fechacaja:=strtodate(encabezadoval.ChildNodes['fecha_operativa'].Text);
                ticket.fec_operativa:=strtodate(encabezadoval.ChildNodes['fecha_operativa'].Text);
                ticket.codigo_tratamiento:= encabezadoval.ChildNodes['tratamiento'].Text;
                ticket.info_adicional:= encabezadoval.ChildNodes['datos_adicionales'].Text;
                TICKET.codigoos_prestador:=encabezadoval.ChildNodes['codigo_prestador'].Text;
                TICKET.codigo_validador:=encabezadoval.ChildNodes['codigo_validador'].Text;
                ticket.cuitsucursal:=encabezadoval.ChildNodes['cuit_sucursal'].Text;
                ticket.codigoos_validador:=encabezadoval.ChildNodes['codigoos_validador'].Text;
                ticket.puntos_farmavalor:=encabezadoval.ChildNodes['punto_farmavalor'].Text;

                  detalleval:=archivoxmlval.DocumentElement.ChildNodes[1];

                    for v := 0 to DETALLEVAL.ChildNodes.Count -1 do
                        BEGIN
                          ITEMVAL:=DETALLEVAL.ChildNodes[v];
                          cdsdetalle.Append;
                          //cdsdetallenroitem.AsString:=itemval.ChildNodes['NroItem'].Text;
                          itemTicket.cod_troquel:=itemval.ChildNodes['nro_troquel'].Text;
                          itemTicket.:=itemval.ChildNodes['nom_largo'].Text;
                          with cdsdetalle do
                          begin
                          cdsdetalleprecio.Asstring:=itemval.ChildNodes['precio'].Text;
                          cdsdetallecantidad.Asstring:=itemval.ChildNodes['cantidad'].Text;
                          cdsdetalledescuentos.Asstring:=itemval.ChildNodes['descuentos'].Text;
                          cdsdetalleprecio_totaldesc.Asstring:=itemval.ChildNodes['precio_totaldesc'].Text;
                          cdsdetalleprecio_total.Asstring:=itemval.ChildNodes['precio_total'].Text;
                          cdsdetalleporcentaje.Asstring:=itemval.ChildNodes['porcentaje'].Text;
                          cdsdetallecod_alfabeta.Asstring:=itemval.ChildNodes['cod_alfabeta'].Text;
                          cdsdetallecod_barraspri.Asstring:=itemval.ChildNodes['cod_barraspri'].Text;
                          cdsdetallecod_iva.Asstring:=itemval.ChildNodes['cod_iva'].Text;
                          cdsdetalleporcentajeos.Asstring:=itemval.ChildNodes['porcentajeos'].Text;
                          cdsdetalleporcentajeco1.Asstring:=itemval.ChildNodes['porcentajeco1'].Text;
                          cdsdetalleporcentajeco2.Asstring:=itemval.ChildNodes['porcentajeco2'].Text;
                          cdsdetalledescuentosos.Asstring:=itemval.ChildNodes['descuentosos'].Text;
                          cdsdetallecod_laboratorio.Asstring:=itemval.ChildNodes['cod_laboratorio'].Text;
                          cdsdetallecan_stk.Asstring:=itemval.ChildNodes['can_stk'].Text;
                          cdsdetallevale.Asstring:=itemval.ChildNodes['vale'].Text;
                          cdsdetallecan_vale.Asstring:=itemval.ChildNodes['can_vale'].Text;
                          cdsdetalletamano.Asstring:=itemval.ChildNodes['tamano'].Text;
                          cdsdetalledescuentoco1.Asstring:=itemval.ChildNodes['descuentoco1'].Text;
                          cdsdetallemodificado.Asstring:=itemval.ChildNodes['modificado'].Text;
                          cdsdetallegentileza.Asstring:=itemval.ChildNodes['gentileza'].Text;
                          cdsdetallerubro.Asstring:=itemval.ChildNodes['rubro'].Text;
                          cdsdetalleimportegent.Asstring:=itemval.ChildNodes['importegent'].Text;
                          cdsdetallecodautorizacion.Asstring:=itemval.ChildNodes['cod_autorizacion'].Text;
                          cdsdetalleitem.Asstring:=itemval.ChildNodes['NroItem'].Text;
                          cdsdetalledescuentoco2.Asstring:=itemval.ChildNodes['descuentoco2'].Text;
                          if cdsdetallecan_vale.asstring<>'0' then
                          begin
                          TICKET.valecantidad:=cdsdetallecan_vale.AsString;
                          ticket.llevavale:='SI';
                          end;
                          end;
                        end;



    Result:= ticket;

end;


end.
